{"ast":null,"code":"import React from'react';// import logo from './logo.svg';\n// import './App.css';\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.tsx</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n// export default App;\nimport{useEffect,useState}from'react';import'./App.css';import{buildGame,LoadGameData,splitTeamNames,nbaTeamsAbbreviation,generateYouTubeLinks,jsonInput}from'./api';import{Card,CardContent,Typography,Chip}from'@mui/material';import{makeStyles}from'@mui/styles';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const useStyles=makeStyles({card:{marginBottom:16,// Space between cards\npadding:'16px'// Padding inside the card\n},chip:{marginTop:8// Space between text and the Chip component\n}});// function serializeMap(map: Map<string, any>): string {\n//   return JSON.stringify(Array.from(map.entries()));\n// }\n// function deserializeMap(serializedMap: string): Map<string, any> {\n//   return new Map(JSON.parse(serializedMap));\n// }\n// function loadMapFromFile(filePath: string): Map<string, any> {\n//   const serializedMap = fs.readFileSync(filePath, 'utf-8');\n//   return deserializeMap(serializedMap);\n// }\n// Function to save data as a file in the browser\n// const saveMapToFile = (data: Map<string, number[]>, fileName: string) => {\n//   const jsonString = JSON.stringify(Array.from(data.entries()));\n//   const blob = new Blob([jsonString], { type: 'application/json' });\n//   const url = URL.createObjectURL(blob);\n//   const link = document.createElement('a');\n//   link.href = url;\n//   link.download = fileName;\n//   link.click();\n//   URL.revokeObjectURL(url);\n// };\nfunction App(){// LoadGameData();\nconst classes=useStyles();// const gamesData = await LoadGameData();\nconst[gamesData,setGamesData]=useState(null);const[loading,setLoading]=useState(true);const[youtubeLinks,setYoutubeLinks]=useState(null);// const [revealScore, setRevealScore] = useState<boolean>(false);\nuseEffect(()=>{const fetchData=async()=>{try{// Simulate an API call or async operation\nconst data=await LoadGameData();// Replace with your actual data fetching logic\nconst gamesArray=data.response||[];// const results = isCloseGame(builtGames);\nconst builtGames=buildGame(gamesArray);setGamesData(builtGames);console.log(\"builtGAmes are \"+builtGames);console.log(builtGames);const youtubeLinks=generateYouTubeLinks(jsonInput,Array.from(builtGames.keys()));setYoutubeLinks(youtubeLinks);console.log(\"youtubeLinks are \"+youtubeLinks);console.log(youtubeLinks);// Save the data to a file\n// const filePath = '03-04-NBAGames.json';\n// saveMapToFile(builtGames, filePath);\n// console.log('Finished saving file');\n}catch(error){console.error('Error fetching data:',error);}finally{setLoading(false);}};fetchData();},[]);if(loading){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}if(!gamesData){return/*#__PURE__*/_jsx(\"div\",{children:\"No data available\"});}return/*#__PURE__*/_jsx(\"div\",{children:Array.from(gamesData.entries()).map(_ref=>{let[gameKey,scores]=_ref;const teamNames=splitTeamNames(gameKey);if(!teamNames)return null;const{visitorTeam,homeTeam}=teamNames;const[visitorScore,homeScore]=scores;const highlightStatus=Math.abs(visitorScore-homeScore)<=5;const homeAbbreviation=nbaTeamsAbbreviation.get(homeTeam)||homeTeam;const visitorAbbreviation=nbaTeamsAbbreviation.get(visitorTeam)||visitorTeam;const currLink=(youtubeLinks===null||youtubeLinks===void 0?void 0:youtubeLinks.get(gameKey))||'';return/*#__PURE__*/_jsx(Card,{className:classes.card,children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",gutterBottom:true,children:[homeTeam,\" vs \",visitorTeam]}),!highlightStatus&&/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",children:[homeAbbreviation,\" \",homeScore,\" - \",visitorAbbreviation,\" \",visitorScore]}),!highlightStatus&&currLink&&/*#__PURE__*/_jsx(\"a\",{href:currLink,target:\"_blank\",rel:\"noopener noreferrer\",style:{textDecoration:'none'},children:/*#__PURE__*/_jsx(Chip,{label:\"Not a Close Game, But Watch Highlights Anyway!\",color:\"error\",className:classes.chip})}),highlightStatus&&/*#__PURE__*/_jsx(\"a\",{href:currLink,target:\"_blank\",rel:\"noopener noreferrer\",style:{textDecoration:'none'},children:/*#__PURE__*/_jsx(Chip,{label:\"Close Game - Watch Highlights!\",color:\"success\",className:classes.chip})})]})},`${homeTeam}-${visitorTeam}`);})});};export default App;","map":{"version":3,"names":["React","useEffect","useState","buildGame","LoadGameData","splitTeamNames","nbaTeamsAbbreviation","generateYouTubeLinks","jsonInput","Card","CardContent","Typography","Chip","makeStyles","jsx","_jsx","jsxs","_jsxs","useStyles","card","marginBottom","padding","chip","marginTop","App","classes","gamesData","setGamesData","loading","setLoading","youtubeLinks","setYoutubeLinks","fetchData","data","gamesArray","response","builtGames","console","log","Array","from","keys","error","children","entries","map","_ref","gameKey","scores","teamNames","visitorTeam","homeTeam","visitorScore","homeScore","highlightStatus","Math","abs","homeAbbreviation","get","visitorAbbreviation","currLink","className","variant","gutterBottom","href","target","rel","style","textDecoration","label","color"],"sources":["/Users/alfredosantana/Desktop/workspace/react-app/close-game/src/App.tsx"],"sourcesContent":["import React from 'react';\n// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.tsx</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport { useEffect, useState } from 'react'\nimport './App.css'\nimport { buildGame, LoadGameData, splitTeamNames, nbaTeamsAbbreviation, generateYouTubeLinks, jsonInput } from './api';\nimport { Card, CardContent, Typography, Chip } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles({\n  card: {\n    marginBottom: 16, // Space between cards\n    padding: '16px',   // Padding inside the card\n  },\n  chip: {\n    marginTop: 8, // Space between text and the Chip component\n  },\n});\n\n\n\n// function serializeMap(map: Map<string, any>): string {\n//   return JSON.stringify(Array.from(map.entries()));\n// }\n\n\n\n// function deserializeMap(serializedMap: string): Map<string, any> {\n//   return new Map(JSON.parse(serializedMap));\n// }\n\n// function loadMapFromFile(filePath: string): Map<string, any> {\n//   const serializedMap = fs.readFileSync(filePath, 'utf-8');\n//   return deserializeMap(serializedMap);\n// }\n\n// Function to save data as a file in the browser\n// const saveMapToFile = (data: Map<string, number[]>, fileName: string) => {\n//   const jsonString = JSON.stringify(Array.from(data.entries()));\n//   const blob = new Blob([jsonString], { type: 'application/json' });\n//   const url = URL.createObjectURL(blob);\n//   const link = document.createElement('a');\n//   link.href = url;\n//   link.download = fileName;\n//   link.click();\n//   URL.revokeObjectURL(url);\n// };\n\nfunction App() {\n  // LoadGameData();\n  const classes = useStyles();\n\n  // const gamesData = await LoadGameData();\n  const [gamesData, setGamesData] = useState<Map<string, number[]> | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [youtubeLinks, setYoutubeLinks] = useState<Map<string, string> | null>(null);\n  // const [revealScore, setRevealScore] = useState<boolean>(false);\n\n\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Simulate an API call or async operation\n        const data = await LoadGameData(); // Replace with your actual data fetching logic\n        const gamesArray = data.response || [];\n        // const results = isCloseGame(builtGames);\n        const builtGames = buildGame(gamesArray);\n        setGamesData(builtGames);\n        console.log(\"builtGAmes are \" + builtGames);\n        console.log(builtGames);\n\n        const youtubeLinks = generateYouTubeLinks(jsonInput, Array.from(builtGames.keys()) as string[]);\n        setYoutubeLinks(youtubeLinks);\n        console.log(\"youtubeLinks are \" + youtubeLinks);\n        console.log(youtubeLinks);\n\n\n        // Save the data to a file\n        // const filePath = '03-04-NBAGames.json';\n        // saveMapToFile(builtGames, filePath);\n        // console.log('Finished saving file');\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!gamesData) {\n    return <div>No data available</div>;\n  }\n\n  return (\n    <div>\n      {Array.from(gamesData.entries()).map(([gameKey, scores]) => {\n        const teamNames = splitTeamNames(gameKey);\n        if (!teamNames) return null;\n\n        const { visitorTeam, homeTeam } = teamNames;\n        const [visitorScore, homeScore] = scores;\n        const highlightStatus = Math.abs(visitorScore - homeScore) <= 5;\n\n        const homeAbbreviation = nbaTeamsAbbreviation.get(homeTeam) || homeTeam;\n        const visitorAbbreviation = nbaTeamsAbbreviation.get(visitorTeam) || visitorTeam;\n        const currLink = youtubeLinks?.get(gameKey) || '';\n        return (\n          <Card className={classes.card} key={`${homeTeam}-${visitorTeam}`}>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                {homeTeam} vs {visitorTeam}\n              </Typography>\n              { !highlightStatus && <Typography variant=\"body1\">\n                {homeAbbreviation} {homeScore} - {visitorAbbreviation} {visitorScore}\n              </Typography>}\n              {!highlightStatus && currLink && (\n                <a href={currLink} target=\"_blank\" rel=\"noopener noreferrer\" style={{ textDecoration: 'none' }}>\n                  <Chip\n                    label=\"Not a Close Game, But Watch Highlights Anyway!\"\n                    color=\"error\"\n                    className={classes.chip}\n                  />\n                </a>\n              )}\n              {/* <Chip\n            label=\"Show\"\n            color=\"error\"\n            onClick={() => setRevealScore(!revealScore)}\n            className={classes.chip}\n          /> */}\n              {highlightStatus && (\n                <a href={currLink} target=\"_blank\" rel=\"noopener noreferrer\" style={{ textDecoration: 'none' }}>\n                  <Chip\n                    label=\"Close Game - Watch Highlights!\"\n                    color=\"success\"\n                    className={classes.chip}\n                  />\n                </a>\n              )}\n\n              {/* {highlightStatus && (\n                <Chip label=\"Close Game - Watch Highlights!\" color=\"success\" className={classes.chip}  />\n              )} */}\n            </CardContent>\n          </Card>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default App\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}