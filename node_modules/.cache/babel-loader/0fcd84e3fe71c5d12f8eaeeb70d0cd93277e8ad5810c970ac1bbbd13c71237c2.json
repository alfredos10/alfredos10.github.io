{"ast":null,"code":"var _jsxFileName = \"/Users/alfredosantana/Desktop/workspace/react-app/close-game/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\n// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.tsx</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport { buildGame, LoadGameData, splitTeamNames, nbaTeamsAbbreviation, generateYouTubeLinks } from './api';\nimport { Card, CardContent, Typography, Chip, Box, Stack } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport { youtubeData } from './YoutubeData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  card: {\n    marginBottom: 16,\n    padding: '16px'\n  },\n  chip: {\n    marginTop: 8\n  },\n  chipContainer: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    alignItems: 'center',\n    gap: '8px' // Add spacing between chips\n  },\n  link: {\n    display: 'flex',\n    // Ensure the link aligns properly\n    alignItems: 'center',\n    // Vertically center the link content\n    textDecoration: 'none' // Remove underline from the link\n  }\n}));\n\n// function serializeMap(map: Map<string, any>): string {\n//   return JSON.stringify(Array.from(map.entries()));\n// }\n\n// function deserializeMap(serializedMap: string): Map<string, any> {\n//   return new Map(JSON.parse(serializedMap));\n// }\n\n// function loadMapFromFile(filePath: string): Map<string, any> {\n//   const serializedMap = fs.readFileSync(filePath, 'utf-8');\n//   return deserializeMap(serializedMap);\n// }\n\n// Function to save data as a file in the browser\n// const saveMapToFile = (data: Map<string, number[]>, fileName: string) => {\n//   const jsonString = JSON.stringify(Array.from(data.entries()));\n//   const blob = new Blob([jsonString], { type: 'application/json' });\n//   const url = URL.createObjectURL(blob);\n//   const link = document.createElement('a');\n//   link.href = url;\n//   link.download = fileName;\n//   link.click();\n//   URL.revokeObjectURL(url);\n// };\n\nfunction App() {\n  _s();\n  // LoadGameData();\n  const classes = useStyles();\n\n  // const gamesData = await LoadGameData();\n  const [gamesData, setGamesData] = useState(null);\n  const [closeGameStatuses, setCloseGameStatuses] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [youtubeLinks, setYoutubeLinks] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  // const [revealScore, setRevealScore] = useState<boolean>(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Simulate an API call or async operation\n        const data = await LoadGameData(); // Replace with your actual data fetching logic\n        const gamesArray = data.response || [];\n        // const results = isCloseGame(builtGames);\n        const {\n          builtGames,\n          closeGameStatuses\n        } = buildGame(gamesArray); //+\n\n        // const builtGames: Map<string, number[]>, closeGameStatusestatusArr: boolean[] = buildGame(gamesArray);\n        setGamesData(builtGames);\n        console.log(\"builtGAmes are \" + builtGames);\n        console.log(builtGames);\n        setCloseGameStatuses(closeGameStatuses);\n        console.log(\"closeGameStatuses are \" + closeGameStatuses);\n        const youtubeLinks = generateYouTubeLinks(youtubeData, Array.from(builtGames.keys()));\n        setYoutubeLinks(youtubeLinks);\n        console.log(\"youtubeLinks are \" + youtubeLinks);\n        console.log(youtubeLinks);\n\n        // Save the data to a file\n        // const filePath = '03-04-NBAGames.json';\n        // saveMapToFile(builtGames, filePath);\n        // console.log('Finished saving file');\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 12\n    }, this);\n  }\n  if (!gamesData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 12\n    }, this);\n  }\n\n  // async function handleChange(event: SelectChangeEvent<any>, child: ReactNode): Promise<void> {\n  //   const date = event.target.value;\n  //   const nbaData = await LoadGameData(date);\n  //   setSelectedDate(date);\n  //   setGamesData(nbaData);\n  //   const gamesArray = nbaData.response || [];\n  //   // const results = isCloseGame(builtGames);\n  //   const builtGames = buildGame(gamesArray);\n  //   setGamesData(builtGames);\n  //   const youtubeLinks = generateYouTubeLinks(youtubeData, Array.from(builtGames.keys()) as string[]);\n  //   setYoutubeLinks(youtubeLinks);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      style: {\n        background: 'linear-gradient(135deg, #1e3c72 0%, #2a5298 100%)',\n        padding: '40px 20px',\n        textAlign: 'center',\n        color: 'white',\n        position: 'relative',\n        overflow: 'hidden'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '100%',\n          background: 'url(https://www.transparenttextures.com/patterns/basketball.png)',\n          opacity: 0.1,\n          pointerEvents: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          fontSize: '4rem',\n          fontWeight: 'bold',\n          textTransform: 'uppercase',\n          letterSpacing: '4px',\n          margin: 0,\n          animation: 'fadeIn 2s ease-in-out'\n        },\n        children: \"Close Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: '1.5rem',\n          fontWeight: 300,\n          marginTop: '10px',\n          animation: 'slideIn 1.5s ease-in-out'\n        },\n        children: \"Your destination for thrilling NBA highlights\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n        children: `\n          @keyframes fadeIn {\n            0% {\n              opacity: 0;\n              transform: translateY(-20px);\n            }\n            100% {\n              opacity: 1;\n              transform: translateY(0);\n            }\n          }\n\n          @keyframes slideIn {\n            0% {\n              opacity: 0;\n              transform: translateX(-20px);\n            }\n            100% {\n              opacity: 1;\n              transform: translateX(0);\n            }\n          }\n\n          @media (max-width: 768px) {\n            h1 {\n              font-size: 3rem;\n            }\n            p {\n              font-size: 1.2rem;\n            }\n          }\n        `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), Array.from(gamesData.entries()).map(([gameKey, scores], i) => {\n      const teamNames = splitTeamNames(gameKey);\n      if (!teamNames) return null;\n      const {\n        visitorTeam,\n        homeTeam\n      } = teamNames;\n      const [visitorScore, homeScore] = scores;\n      const homeAbbreviation = nbaTeamsAbbreviation.get(homeTeam) || homeTeam;\n      const visitorAbbreviation = nbaTeamsAbbreviation.get(visitorTeam) || visitorTeam;\n      const currLink = (youtubeLinks === null || youtubeLinks === void 0 ? void 0 : youtubeLinks.get(gameKey)) || '';\n      return /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.card,\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: [homeTeam, \" vs \", visitorTeam]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this), !closeGameStatuses[i] && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [homeAbbreviation, \" \", homeScore, \" - \", visitorAbbreviation, \" \", visitorScore]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 41\n          }, this), !closeGameStatuses[i] && currLink && /*#__PURE__*/_jsxDEV(\"a\", {\n            href: currLink,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            style: {\n              textDecoration: 'none'\n            },\n            children: /*#__PURE__*/_jsxDEV(Chip, {\n              label: \"Not a Close Game, But Watch Highlights Anyway!\",\n              color: \"error\",\n              className: classes.chip\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 17\n          }, this), closeGameStatuses[i] && /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.chipContainer,\n            children: /*#__PURE__*/_jsxDEV(Stack, {\n              direction: \"row\",\n              spacing: 1,\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Chip, {\n                label: \"Close Game\",\n                color: \"success\",\n                className: classes.chip\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 21\n              }, this), currLink && /*#__PURE__*/_jsxDEV(\"a\", {\n                href: currLink,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                className: classes.link,\n                children: /*#__PURE__*/_jsxDEV(Chip, {\n                  label: \"Watch Highlights!\",\n                  color: \"primary\",\n                  className: classes.chip,\n                  clickable: true // Make the chip clickable\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this)\n      }, `${homeTeam}-${visitorTeam}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"L2V6tmZr3vuYAfPuHwPFoKlDk6s=\", false, function () {\n  return [useStyles];\n});\n_c = App;\n;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","buildGame","LoadGameData","splitTeamNames","nbaTeamsAbbreviation","generateYouTubeLinks","Card","CardContent","Typography","Chip","Box","Stack","makeStyles","youtubeData","jsxDEV","_jsxDEV","useStyles","theme","card","marginBottom","padding","chip","marginTop","chipContainer","display","flexWrap","justifyContent","alignItems","gap","link","textDecoration","App","_s","classes","gamesData","setGamesData","closeGameStatuses","setCloseGameStatuses","loading","setLoading","youtubeLinks","setYoutubeLinks","selectedDate","setSelectedDate","fetchData","data","gamesArray","response","builtGames","console","log","Array","from","keys","error","children","fileName","_jsxFileName","lineNumber","columnNumber","style","background","textAlign","color","position","overflow","top","left","width","height","opacity","pointerEvents","fontSize","fontWeight","textTransform","letterSpacing","margin","animation","entries","map","gameKey","scores","i","teamNames","visitorTeam","homeTeam","visitorScore","homeScore","homeAbbreviation","get","visitorAbbreviation","currLink","className","variant","gutterBottom","href","target","rel","label","direction","spacing","clickable","_c","$RefreshReg$"],"sources":["/Users/alfredosantana/Desktop/workspace/react-app/close-game/src/App.tsx"],"sourcesContent":["import React, { ReactNode } from 'react';\n// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.tsx</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport { useEffect, useState } from 'react'\nimport './App.css'\nimport { buildGame, LoadGameData, splitTeamNames, nbaTeamsAbbreviation, generateYouTubeLinks, isCloseGame } from './api';\nimport { Card, CardContent, Typography, Chip, FormControl, InputLabel, MenuItem, Select, Box, SelectChangeEvent, Stack } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport { youtubeData } from './YoutubeData';\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    marginBottom: 16,\n    padding: '16px',\n  },\n  chip: {\n    marginTop: 8,\n  },\n  chipContainer: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    alignItems: 'center',\n    gap: '8px', // Add spacing between chips\n  },\n  link: {\n    display: 'flex', // Ensure the link aligns properly\n    alignItems: 'center', // Vertically center the link content\n    textDecoration: 'none', // Remove underline from the link\n  },\n\n}));\n\n\n\n// function serializeMap(map: Map<string, any>): string {\n//   return JSON.stringify(Array.from(map.entries()));\n// }\n\n\n\n// function deserializeMap(serializedMap: string): Map<string, any> {\n//   return new Map(JSON.parse(serializedMap));\n// }\n\n// function loadMapFromFile(filePath: string): Map<string, any> {\n//   const serializedMap = fs.readFileSync(filePath, 'utf-8');\n//   return deserializeMap(serializedMap);\n// }\n\n// Function to save data as a file in the browser\n// const saveMapToFile = (data: Map<string, number[]>, fileName: string) => {\n//   const jsonString = JSON.stringify(Array.from(data.entries()));\n//   const blob = new Blob([jsonString], { type: 'application/json' });\n//   const url = URL.createObjectURL(blob);\n//   const link = document.createElement('a');\n//   link.href = url;\n//   link.download = fileName;\n//   link.click();\n//   URL.revokeObjectURL(url);\n// };\n\nfunction App() {\n  // LoadGameData();\n  const classes = useStyles();\n\n  // const gamesData = await LoadGameData();\n  const [gamesData, setGamesData] = useState<Map<string, number[]> | null>(null);\n  const [closeGameStatuses, setCloseGameStatuses] = useState<boolean[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [youtubeLinks, setYoutubeLinks] = useState<Map<string, string> | null>(null);\n  const [selectedDate, setSelectedDate] = useState<string | null>(null);\n  // const [revealScore, setRevealScore] = useState<boolean>(false);\n\n\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Simulate an API call or async operation\n        const data = await LoadGameData(); // Replace with your actual data fetching logic\n        const gamesArray = data.response || [];\n        // const results = isCloseGame(builtGames);\n        const { builtGames, closeGameStatuses } = buildGame(gamesArray);//+\n\n        // const builtGames: Map<string, number[]>, closeGameStatusestatusArr: boolean[] = buildGame(gamesArray);\n        setGamesData(builtGames);\n        console.log(\"builtGAmes are \" + builtGames);\n        console.log(builtGames);\n        setCloseGameStatuses(closeGameStatuses);\n        console.log(\"closeGameStatuses are \" + closeGameStatuses);\n\n\n\n        const youtubeLinks = generateYouTubeLinks(youtubeData, Array.from(builtGames.keys()) as string[]);\n        setYoutubeLinks(youtubeLinks);\n        console.log(\"youtubeLinks are \" + youtubeLinks);\n        console.log(youtubeLinks);\n\n\n        // Save the data to a file\n        // const filePath = '03-04-NBAGames.json';\n        // saveMapToFile(builtGames, filePath);\n        // console.log('Finished saving file');\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!gamesData) {\n    return <div>No data available</div>;\n  }\n\n  // async function handleChange(event: SelectChangeEvent<any>, child: ReactNode): Promise<void> {\n  //   const date = event.target.value;\n  //   const nbaData = await LoadGameData(date);\n  //   setSelectedDate(date);\n  //   setGamesData(nbaData);\n  //   const gamesArray = nbaData.response || [];\n  //   // const results = isCloseGame(builtGames);\n  //   const builtGames = buildGame(gamesArray);\n  //   setGamesData(builtGames);\n  //   const youtubeLinks = generateYouTubeLinks(youtubeData, Array.from(builtGames.keys()) as string[]);\n  //   setYoutubeLinks(youtubeLinks);\n  // }\n\n  return (\n\n    <div>\n      <header\n        style={{\n          background: 'linear-gradient(135deg, #1e3c72 0%, #2a5298 100%)',\n          padding: '40px 20px',\n          textAlign: 'center',\n          color: 'white',\n          position: 'relative',\n          overflow: 'hidden',\n        }}\n      >\n        {/* Basketball net overlay */}\n        <div\n          style={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            background: 'url(https://www.transparenttextures.com/patterns/basketball.png)',\n            opacity: 0.1,\n            pointerEvents: 'none',\n          }}\n        />\n\n        {/* Title */}\n        <h1\n          style={{\n            fontSize: '4rem',\n            fontWeight: 'bold',\n            textTransform: 'uppercase',\n            letterSpacing: '4px',\n            margin: 0,\n            animation: 'fadeIn 2s ease-in-out',\n          }}\n        >\n          Close Game\n        </h1>\n\n        {/* Subtitle */}\n        <p\n          style={{\n            fontSize: '1.5rem',\n            fontWeight: 300,\n            marginTop: '10px',\n            animation: 'slideIn 1.5s ease-in-out',\n          }}\n        >\n          Your destination for thrilling NBA highlights\n        </p>\n\n        {/* CSS Animations */}\n        <style>\n          {`\n          @keyframes fadeIn {\n            0% {\n              opacity: 0;\n              transform: translateY(-20px);\n            }\n            100% {\n              opacity: 1;\n              transform: translateY(0);\n            }\n          }\n\n          @keyframes slideIn {\n            0% {\n              opacity: 0;\n              transform: translateX(-20px);\n            }\n            100% {\n              opacity: 1;\n              transform: translateX(0);\n            }\n          }\n\n          @media (max-width: 768px) {\n            h1 {\n              font-size: 3rem;\n            }\n            p {\n              font-size: 1.2rem;\n            }\n          }\n        `}\n        </style>\n      </header>\n      {/* <Box sx={{ minWidth: 120 }}>\n        <FormControl fullWidth>\n          <InputLabel id=\"demo-simple-select-label\">Date</InputLabel>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={selectedDate}\n            label=\"Date\"\n            onChange={(event) => handleChange(event, child)}}\n          >\n            <MenuItem value={\"March 5, 2025\"}>March 5, 2025</MenuItem>\n            <MenuItem value={\"March 6, 2025\"}>March 6, 2025</MenuItem>\n            <MenuItem value={\"March 7, 2025\"}>March 7, 2025</MenuItem>\n          </Select>\n        </FormControl>\n      </Box> */}\n      {Array.from(gamesData.entries()).map(([gameKey, scores]: [string, number[]], i: number) => {\n        const teamNames = splitTeamNames(gameKey);\n        if (!teamNames) return null;\n\n        const { visitorTeam, homeTeam } = teamNames;\n        const [visitorScore, homeScore] = scores;\n\n        const homeAbbreviation = nbaTeamsAbbreviation.get(homeTeam) || homeTeam;\n        const visitorAbbreviation = nbaTeamsAbbreviation.get(visitorTeam) || visitorTeam;\n        const currLink = youtubeLinks?.get(gameKey) || '';\n        return (\n          <Card className={classes.card} key={`${homeTeam}-${visitorTeam}`}>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                {homeTeam} vs {visitorTeam}\n              </Typography>\n              {!closeGameStatuses[i] && <Typography variant=\"body1\">\n                {homeAbbreviation} {homeScore} - {visitorAbbreviation} {visitorScore}\n              </Typography>}\n              {!closeGameStatuses[i] && currLink && (\n                <a href={currLink} target=\"_blank\" rel=\"noopener noreferrer\" style={{ textDecoration: 'none' }}>\n                  <Chip\n                    label=\"Not a Close Game, But Watch Highlights Anyway!\"\n                    color=\"error\"\n                    className={classes.chip}\n                  />\n                </a>\n              )}\n              {closeGameStatuses[i] && (\n                <Box className={classes.chipContainer}>\n\n                  <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n                    {/* Chip to indicate the game is close */}\n                    <Chip\n                      label=\"Close Game\"\n                      color=\"success\"\n                      className={classes.chip}\n                    />\n\n                    {/* Chip to watch highlights (only shown if a link is available) */}\n                    {currLink && (\n                      <a href={currLink} target=\"_blank\" rel=\"noopener noreferrer\" className={classes.link}>\n                        <Chip\n                          label=\"Watch Highlights!\"\n                          color=\"primary\"\n                          className={classes.chip}\n                          clickable // Make the chip clickable\n                        />\n                      </a>\n                    )}\n                  </Stack>\n                </Box>\n\n              )}\n              {/* {closeGameStatuses[i] && (\n                <a href={currLink} target=\"_blank\" rel=\"noopener noreferrer\" style={{ textDecoration: 'none' }}>\n                  <Chip\n                    label=\"Close Game - Watch Highlights!\"\n                    color=\"success\"\n                    className={classes.chip}\n                  />\n                </a>\n              )} */}\n            </CardContent>\n          </Card>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default App\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}